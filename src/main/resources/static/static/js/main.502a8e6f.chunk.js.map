{"version":3,"sources":["httpRequests/httpActions.js","FloorPlan.js","App.js","index.js"],"names":["a","axios","get","catch","err","console","log","res","data","val","post","FloorPlan","canvasRef","useRef","useState","floorPlan","showInputForm","floor","errorMessage","state","setState","useEffect","getAllFloorPlan","then","prevState","onChangeHandler","event","target","name","value","onDeleteClickHandler","roomId","index","filter","_","i","delete","error","deleteFloorPlan","onSaveCoordinatesClickHandler","postFloorPlan","room","concat","response","errors","defaultMessage","inputForm","className","map","unit","onClick","deleteFromFloor","x","y","onSubmit","preventDefault","type","onChange","placeholder","ref","arr","canvas","current","ctx","getContext","width","height","fillStyle","beginPath","coordinates","lineTo","closePath","stroke","contextFunc","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.502a8e6f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function getAllFloorPlan() {\n  try {\n    const res = await axios\n      .get('https://nerdystestapp.herokuapp.com/v1/floorPlan')\n      .catch((err) => {\n        console.log(err);\n      });\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function postFloorPlan(val) {\n  const res = await axios.post(\n    'https://nerdystestapp.herokuapp.com/v1/floorPlan',\n    val\n  );\n  return res.data;\n}\n\nexport function deleteFloorPlan(roomId) {\n  try {\n    axios.delete(`https://nerdystestapp.herokuapp.com/v1/floorPlan/${roomId}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport {\n  getAllFloorPlan,\n  postFloorPlan,\n  deleteFloorPlan,\n} from './httpRequests/httpActions';\nimport './index.css';\n\nconst FloorPlan = () => {\n  const canvasRef = useRef(null);\n  const [state, setState] = useState({\n    floorPlan: [],\n    showInputForm: false,\n    floor: [],\n    errorMessage: null,\n  });\n\n  useEffect(() => {\n    const res = getAllFloorPlan();\n    res.then((val) => {\n      setState((prevState) => ({\n        ...prevState,\n        floorPlan: val,\n      }));\n    });\n  }, []);\n\n  const contextFunc = (arr) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 800;\n    canvas.height = 500;\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n\n    arr.map((coordinates) => {\n      ctx.lineTo(coordinates.x, coordinates.y);\n    });\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setState((prevState) => ({\n      ...prevState,\n      floor: state.floor.concat({ x: state.x, y: state.y }),\n    }));\n  };\n\n  const deleteFromFloor = (index) => {\n    setState((prevState) => ({\n      ...prevState,\n      floor: state.floor.filter((_, i) => i !== index),\n    }));\n  };\n\n  const onDeleteClickHandler = (roomId, index) => {\n    setState((prevState) => ({\n      ...prevState,\n      floorPlan: state.floorPlan.filter((_, i) => i !== index),\n    }));\n\n    deleteFloorPlan(roomId);\n  };\n\n  const onSaveCoordinatesClickHandler = () => {\n    const room = {\n      room: state.floor,\n    };\n    const response = postFloorPlan(room);\n\n    response\n      .then((val) => {\n        console.log(val);\n        setState((prevState) => ({\n          ...prevState,\n          floorPlan: state.floorPlan.concat(val),\n        }));\n      })\n      .catch((err) => {\n        setState((prevState) => ({\n          ...prevState,\n          errorMessage: err.response.data.errors[0].defaultMessage,\n        }));\n      });\n\n    console.log(state);\n  };\n\n  const inputForm = (\n    <div className=\"inputActions\">\n      <table>\n        <thead>\n          <tr>\n            <th>x</th>\n            <th>y</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.floor.map((unit, index) => (\n            <tr key={index} onClick={() => deleteFromFloor(index)}>\n              <td>{unit.x}</td>\n              <td>{unit.y}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button className=\"save\" onClick={() => onSaveCoordinatesClickHandler()}>\n        Save\n      </button>\n\n      <form onSubmit={onSubmitHandler} className=\"coordinatesInputForm\">\n        <input\n          name=\"x\"\n          type=\"number\"\n          value={state.x || ''}\n          onChange={onChangeHandler}\n          placeholder=\"x\"\n        ></input>\n        <input\n          name=\"y\"\n          type=\"number\"\n          value={state.y || ''}\n          onChange={onChangeHandler}\n          placeholder=\"y\"\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {state.errorMessage !== null ? <h1>{state.errorMessage}</h1> : null}\n    </div>\n  );\n\n  const table = (arr) => (\n    <table>\n      <thead>\n        <tr>\n          <th>x</th>\n          <th>y</th>\n        </tr>\n      </thead>\n      <tbody>\n        {arr.map((unit, index) => (\n          <tr key={index}>\n            <td>{unit.x}</td>\n            <td>{unit.y}</td>\n            <td></td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <canvas className=\"canvas\" ref={canvasRef}></canvas>\n        {inputForm}\n      </div>\n      <div className=\"actionsElements\">\n        {state.floorPlan.map((floor, index) => (\n          <div key={floor.roomId}>\n            <div\n              className=\"coordinateElement\"\n              onClick={() => contextFunc(floor.room)}\n            >\n              <table className=\"tableInfo\">\n                <thead>\n                  <tr>\n                    <th>x</th>\n                    <th>y</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {floor.room.map((room, index) => (\n                    <tr key={index}>\n                      <td>{room.x}</td>\n                      <td>{room.y}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"deleteContainer\">\n              <button\n                className=\"btn\"\n                onClick={() => onDeleteClickHandler(floor.roomId, index)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FloorPlan;\n","import FloorPlan from './FloorPlan';\nimport { Fragment } from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <FloorPlan />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}